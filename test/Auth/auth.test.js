"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const AuthService_1 = require("./AuthService");
const config_1 = require("./config");
const AWS = require("aws-sdk");
AWS.config.region = config_1.config.REGION;
async function getBuckets() {
    let buckets;
    try {
        buckets = await new AWS.S3().listBuckets().promise();
    }
    catch (error) {
        buckets = undefined;
    }
    return buckets;
}
async function callStuff() {
    const authService = new AuthService_1.AuthService();
    const user = await authService.login(config_1.config.TEST_USER_NAME, config_1.config.TEST_USER_PASSWORD);
    await authService.getAWSTemporaryCreds(user);
    const someCreds = AWS.config.credentials;
    const buckets = await getBuckets();
    const a = 5;
}
callStuff();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXV0aC50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0NBQTRDO0FBQzVDLHFDQUFrQztBQUNsQywrQkFBK0I7QUFFL0IsR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsZUFBTSxDQUFDLE1BQU0sQ0FBQztBQUVsQyxLQUFLLFVBQVUsVUFBVTtJQUNyQixJQUFJLE9BQU8sQ0FBQztJQUNaLElBQUk7UUFDQSxPQUFPLEdBQUcsTUFBTSxJQUFJLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztLQUN4RDtJQUFDLE9BQU8sS0FBSyxFQUFFO1FBQ1osT0FBTyxHQUFHLFNBQVMsQ0FBQTtLQUN0QjtJQUNELE9BQU8sT0FBTyxDQUFBO0FBQ2xCLENBQUM7QUFHRCxLQUFLLFVBQVUsU0FBUztJQUNwQixNQUFNLFdBQVcsR0FBRyxJQUFJLHlCQUFXLEVBQUUsQ0FBQztJQUV0QyxNQUFNLElBQUksR0FBRyxNQUFNLFdBQVcsQ0FBQyxLQUFLLENBQUMsZUFBTSxDQUFDLGNBQWMsRUFBRSxlQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtJQUN0RixNQUFNLFdBQVcsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM3QyxNQUFNLFNBQVMsR0FBSSxHQUFHLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQztJQUMxQyxNQUFNLE9BQU8sR0FBRyxNQUFNLFVBQVUsRUFBRSxDQUFDO0lBQ25DLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNoQixDQUFDO0FBRUQsU0FBUyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdXRoU2VydmljZSB9IGZyb20gJy4vQXV0aFNlcnZpY2UnO1xyXG5pbXBvcnQgeyBjb25maWcgfSBmcm9tICcuL2NvbmZpZyc7XHJcbmltcG9ydCAqIGFzIEFXUyBmcm9tICdhd3Mtc2RrJztcclxuXHJcbkFXUy5jb25maWcucmVnaW9uID0gY29uZmlnLlJFR0lPTjtcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldEJ1Y2tldHMoKXtcclxuICAgIGxldCBidWNrZXRzO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBidWNrZXRzID0gYXdhaXQgbmV3IEFXUy5TMygpLmxpc3RCdWNrZXRzKCkucHJvbWlzZSgpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBidWNrZXRzID0gdW5kZWZpbmVkXHJcbiAgICB9XHJcbiAgICByZXR1cm4gYnVja2V0c1xyXG59XHJcblxyXG5cclxuYXN5bmMgZnVuY3Rpb24gY2FsbFN0dWZmKCkge1xyXG4gICAgY29uc3QgYXV0aFNlcnZpY2UgPSBuZXcgQXV0aFNlcnZpY2UoKTtcclxuXHJcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgYXV0aFNlcnZpY2UubG9naW4oY29uZmlnLlRFU1RfVVNFUl9OQU1FLCBjb25maWcuVEVTVF9VU0VSX1BBU1NXT1JEKVxyXG4gICAgYXdhaXQgYXV0aFNlcnZpY2UuZ2V0QVdTVGVtcG9yYXJ5Q3JlZHModXNlcik7XHJcbiAgICBjb25zdCBzb21lQ3JlZHMgPSAgQVdTLmNvbmZpZy5jcmVkZW50aWFscztcclxuICAgIGNvbnN0IGJ1Y2tldHMgPSBhd2FpdCBnZXRCdWNrZXRzKCk7XHJcbiAgICBjb25zdCBhID0gNTtcclxufVxyXG5cclxuY2FsbFN0dWZmKCk7XHJcblxyXG4iXX0=